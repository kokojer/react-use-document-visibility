{"version":3,"file":"react-use-document-visibility.modern.js","sources":["../src/hook.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ninterface TypesHook {\r\n  counter: number;\r\n  visible: boolean;\r\n  onVisibilityChange: (callback: (isVisible?: boolean) => void) => void;\r\n}\r\n\r\nexport const useDocumentVisibility = (): TypesHook => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [visible, setVisible] = useState(true);\r\n  const callbacks: Array<(isVisible?: boolean) => void> = [];\r\n  const onVisibilityChange = (callback: () => void) => {\r\n    callbacks.push(callback.bind(null, visible));\r\n  };\r\n  useEffect(() => {\r\n    const handlerVisibilityChange = (): void => {\r\n      document.visibilityState === \"visible\"\r\n        ? setVisible(true)\r\n        : setVisible(false);\r\n      document.hidden ? setCounter((counter) => ++counter) : \"\";\r\n      callbacks.forEach((callback) => {\r\n        callback();\r\n      });\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handlerVisibilityChange);\r\n    return () =>\r\n      document.removeEventListener(\"visibilitychange\", handlerVisibilityChange);\r\n  }, []);\r\n  return {\r\n    counter,\r\n    visible,\r\n    onVisibilityChange,\r\n  };\r\n};\r\n"],"names":["useDocumentVisibility","counter","setCounter","useState","visible","setVisible","callbacks","useEffect","handlerVisibilityChange","document","visibilityState","hidden","forEach","callback","addEventListener","removeEventListener","onVisibilityChange","push","bind"],"mappings":"gDAQaA,MAAAA,EAAwB,KACnC,MAAOC,EAASC,GAAcC,EAAS,IAChCC,EAASC,GAAcF,GAAS,GACjCG,EAAkD,GAkBxD,OAdAC,EAAU,KACR,MAAMC,EAA0B,KACD,YAA7BC,SAASC,gBACLL,GAAW,GACXA,GAAW,GACfI,SAASE,QAAST,EAAYD,KAAcA,GAC5CK,EAAUM,QAASC,IACjBA,OAIJ,OADAJ,SAASK,iBAAiB,mBAAoBN,GACvC,IACLC,SAASM,oBAAoB,mBAAoBP,IAClD,IACI,CACLP,UACAG,UACAY,mBApB0BH,IAC1BP,EAAUW,KAAKJ,EAASK,KAAK,KAAMd"}