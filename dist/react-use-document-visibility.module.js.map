{"version":3,"file":"react-use-document-visibility.module.js","sources":["../src/hook.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\ninterface TypesHook {\r\n  counter: number;\r\n  visible: boolean;\r\n  onVisibilityChange: (callback: (isVisible?: boolean) => void) => void;\r\n}\r\n\r\nexport const useDocumentVisibility = (): TypesHook => {\r\n  const [counter, setCounter] = useState(0);\r\n  const [visible, setVisible] = useState(true);\r\n  const callbacks: Array<(isVisible?: boolean) => void> = [];\r\n  const onVisibilityChange = (callback: () => void) => {\r\n    callbacks.push(callback.bind(null, visible));\r\n  };\r\n  useEffect(() => {\r\n    const handlerVisibilityChange = (): void => {\r\n      document.visibilityState === \"visible\"\r\n        ? setVisible(true)\r\n        : setVisible(false);\r\n      document.hidden ? setCounter((counter) => ++counter) : \"\";\r\n      callbacks.forEach((callback) => {\r\n        callback();\r\n      });\r\n    };\r\n    document.addEventListener(\"visibilitychange\", handlerVisibilityChange);\r\n    return () =>\r\n      document.removeEventListener(\"visibilitychange\", handlerVisibilityChange);\r\n  }, []);\r\n  return {\r\n    counter,\r\n    visible,\r\n    onVisibilityChange,\r\n  };\r\n};\r\n"],"names":["useDocumentVisibility","_useState","useState","counter","setCounter","_useState2","visible","setVisible","useEffect","handlerVisibilityChange","document","visibilityState","hidden","callbacks","forEach","callback","addEventListener","removeEventListener","onVisibilityChange","push","bind"],"mappings":"gDAQaA,IAAqBA,EAAG,WACnC,IAAAC,EAA8BC,EAAS,GAAhCC,EAASC,EAAAA,GAAAA,EAChBH,EAAA,GAAAI,EAA8BH,GAAS,GAAhCI,EAASC,EAAAA,GAAAA,EAChBF,EAAA,KAAwD,GAkBxD,OAdAG,EAAU,WACR,IAA6BC,EAAG,WACD,YAA7BC,SAASC,gBACLJ,GAAW,GACXA,GAAW,GACfG,SAASE,QAASR,EAAW,SAACD,GAAD,QAAeA,IAC5CU,EAAUC,QAAQ,SAACC,GACjBA,OAIJ,OADAL,SAASM,iBAAiB,mBAAoBP,GAE5CC,WAAAA,OAAAA,SAASO,oBAAoB,mBAAoBR,KAClD,IACI,CACLN,QAAAA,EACAG,QAAAA,EACAY,mBApByB,SAACH,GAC1BF,EAAUM,KAAKJ,EAASK,KAAK,KAAMd"}